name: PizzaCI - Syst√®me de Gestion Pizzeria

on:
  workflow_dispatch: # D√©clenchement manuel depuis l'interface GitHub
    inputs: # D√©finition des param√®tres d'entr√©e
      nom_client: # Premier param√®tre : nom du client
        description: "Nom du client"
        required: true # Le workflow ne pourra pas √™tre lanc√© sans ce param√®tre
      pizzas: # Second param√®tre : liste des pizzas
        description: | # Description sur plusieurs lignes avec |
          Liste des pizzas au format JSON. Attention aux points importants:
          - Utilisez des guillemets doubles
          - Entourez la liste avec []
          Exemple: ["margherita","reine","calzone"]
        required: true # Le workflow ne pourra pas √™tre lanc√© sans ce param√®tre

jobs:
  reception-commande:
    name: Reception de Commande
    runs-on: ubuntu-latest
    steps:
      - name: Accueil client
        run: |
          echo "Bonjour ${{ github.event.inputs.nom_client }}"
          echo "Votre commande avec les pizzas ${{ github.event.inputs.pizzas }} a bien √©t√© re√ßue."
    outputs:
      pizzas: ${{ github.event.inputs.pizzas }} # On transmet la liste des pizzas

  cuisine:
    needs: reception-commande
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pizza: ${{ fromJSON(needs.reception-commande.outputs.pizzas) }}
        taille: ["L", "XL"]
        include:
          # Pizza bonus en taille L
          - pizza: "pizza-dessert"
            taille: "L"
    steps:
      - name: Pr√©paration
        run: echo "Pr√©paration pizza ${{ matrix.pizza }} en taille ${{ matrix.taille }}"

  livraison:
    needs: cuisine
    runs-on: ubuntu-latest
    concurrency:
      group: zone-livraison # Toutes les livraisons utilisent le m√™me groupe
      cancel-in-progress: true # Annule la livraison en cours si une nouvelle arrive
    steps:
      - name: Pr√©paration livraison
        run: |
          echo "Pr√©paration de la livraison pour ${{ github.event.inputs.nom_client }}"
          echo "Pizzas √† livrer : ${{ github.event.inputs.pizzas }}"

      - name: Temps de livraison
        run: |
          echo "Le livreur est en route..."
          sleep 60  # Attente de 1 minute
          echo "Livraison effectu√©e !"

  reclamation:
    needs: livraison
    runs-on: ubuntu-latest
    # Permissions sp√©cifiques pour ce job
    permissions:
      issues: write # Seule permission n√©cessaire pour cr√©er des issues
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cr√©ation r√©clamation
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh issue create --title "R√©clamation client" --body "üî• Pizzas livr√©es froides !"
