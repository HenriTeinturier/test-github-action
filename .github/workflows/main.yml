name: workflow

on: push

jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      output1: "L'exécution du job1 c'est bien passée"
    steps:
      - name: tâche de job1
        run: echo "Exécution de job1"
  job2:
    runs-on: ubuntu-latest
    outputs:
      output2: ${{ steps.step2.outputs.output2 }}
    steps:
      - name: tâche de job2
        id: step2
        run: |
          echo "Exécution de job2"
          echo "output2=L'exécution du job2 c'est bien passée" >> $GITHUB_OUTPUT
  # on crée un nouveau job 3 et on passe l'ancien 3 en 4
  job3:
    runs-on: ubuntu-latest
    steps:
      - name: Créer une variable d'environnement
        run: echo "MA_VARIABLE=Hello" >> $GITHUB_ENV

      - name: Afficher la variable avec les deux méthodes
        run: |
          echo "Avec la clé: $MA_VARIABLE"
          echo "Avec le contexte env: ${{ env.MA_VARIABLE }}"

      - name: Utiliser la variable dans un if avec env.clé
        if: ${{ env.MA_VARIABLE == 'Hello' }}
        run: |
          echo "La variable est bien présente!"

      - name: Utiliser la variable dans un if avec env.clé
        if: ${{ !env.MA_VARIABLE }}
        run: |
          echo "La variable n'est pas présente!"

  # on passe le job 3 en 4 et on ajoute le job3 dans needs
  job4:
    runs-on: ubuntu-latest
    needs: [job1, job2, job3]
    steps:
      - name: tâche de job4
        run: |
          echo "Exécution de job4 après job1, 2 et 3"
          echo "output1=${{ needs.job1.outputs.output1 }}" 
          echo "output2=${{ needs.job2.outputs.output2 }}"
