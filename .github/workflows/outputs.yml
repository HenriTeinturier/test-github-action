name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    outputs:
      build-and-test: "L'exÃ©cution du job build-and-test c'est bien passÃ©e"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test:ci

  test-e2e:
    name: Test E2E
    runs-on: ubuntu-latest
    outputs:
      test-e2e: "L'exÃ©cution du job test-e2e c'est bien passÃ©e"
    steps:
      - name: test e2e
        id: test-e2e
        run: |
          echo "e2e ok"
          echo "test-e2e-confirm=Je confirme e2e c'est bien passsÃ©" >> $GITHUB_OUTPUT
  deploy:
    name: Deploy
    needs: [build-and-test, test-e2e]
    runs-on: ubuntu-latest

    steps:
      - name: test e2e rapport
        run: |
          echo "build-and-test-output=${{ needs.build-and-test.outputs.build-and-test }}"
          echo "test-e2e-output=${{ needs.test-e2e.outputs.test-e2e }}"
          echo "test-e2e-confirm=${{ needs.test-e2e.outputs.test-e2e-confirm }}"
          echo "isProductionReady=true" >> $GITHUB_ENV

      # on crÃ©e une step qui va rÃ©cupÃ©rer des variables du job prÃ©cÃ©dent en utilisant GITHUB_ENV
      - name: rapport final
        run: |
          echo "rapport finale: ${{ env.isProductionReady }}"
          echo "rapport finale identique: $isProductionReady"

      - name: deploiement ready ?
        if: ${{ env.isProductionReady }} == 'true'
        run: echo "ðŸš€ Deploying to PRODUCTION environment"

      - name: Deploy to Development
        if: github.ref == 'refs/heads/dev'
        run: echo "ðŸš€ Deploying to DEVELOPMENT environment"

      - name: Deploy to Production
        if: github.ref == 'refs/heads/main'
        run: echo "ðŸš€ Deploying to PRODUCTION environment"
