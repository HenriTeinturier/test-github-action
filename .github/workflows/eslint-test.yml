name: Lint

on: push

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      # Pour faire notre test on récupère le code
      - name: Checkout code
        uses: actions/checkout@v4

      # On installe node
      - name: Set up Node.js
        uses: actions/setup-node@v4

      # On installe les dépendances
      - name: Install dependencies
        run: npm install

      # On exécute ESLint
      - name: Run ESLint
        id: eslint
        # on met le résultat du lint dans une variable
        # on affiche le résultat
        # on met le résultat dans l'environnement
        run: |
          eslint_output=$(npm run lint --silent)
          echo $eslint_output
          echo "eslint_output=$eslint_output" >> $GITHUB_ENV
        # Permet de continuer le workflow même si erreur
        # continue-on-error: true

      - name: Display ESLint output
        if: failure()
        # On ajoute des parametres file, line à notre warning
        # on pourrait utiliser des valeurs dynamiques pour file et line
        # Mais cela ferait des commandes bash compliquées
        # on met donc des statics pour ntore exemple
        run: |
          echo "::group::ESLint Output"
          echo "eslint_output = $eslint_output"
          echo "::warning file=App.tsx,line=6::message d'erreur pour le moment"
          echo "::endgroup::"
