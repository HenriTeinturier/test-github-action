name: workgin directory et shell
on: push
defaults:
  run:
    working-directory: ./frontend
    shell: bash

jobs:
  my-job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: install node
        uses: actions/setup-node@v4
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      - name: Cache dependencies
        uses: actions/cache@v4
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          # Par convention on peut ajouter node- avant le hash. Ce n’est pas obligatoire mais c’est plus clair pour différencier les caches si on en utilise plusieurs dans notre workflow (un pour python, un pour build, …).
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: display cache statut
        run: |
          if [ "${{ steps.npm-cache.outputs.cache-hit }}" == "true" ]; then
            echo "✅ cache récupéré"
          else
            echo "❌ pas de cache récupéré"
          fi
      - name: install dependencies
        run: npm ci
